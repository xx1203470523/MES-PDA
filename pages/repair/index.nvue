<template>
	<view class="sfcbox" :style="{height: pageHeight}">
		<uni-forms ref="formRef" class="p-2 bg-white border-bottom" errShowType="toast"
			:rules="page.formRules.pageRules" :modelValue="page.input">
			<uni-forms-item label="条码" name="code" required>
				<uni-easyinput ref="codeInputRef" v-model="page.input.code" trim placeholder="扫描或输入"
					@confirm="codeConfirmAsync"></uni-easyinput>
			</uni-forms-item>
			<uni-forms-item label="状态" name="status" required>
				<uni-data-select v-model="page.input.status" :localdata="page.selected.options"
					:clear="false"></uni-data-select>
			</uni-forms-item>
		</uni-forms>

		<uni-card class="flex-1">
			<view class="flex-row flex-justify-between">
				<view class="flex-row flex-1">
					<view class="flex-row">
						<tui-text text="绑定明细：" :size="28"></tui-text>
						<tui-text :text="page.result.data.length" type="danger" :size="28"></tui-text>
					</view>
					<view class="ml-4 flex-row">
						<tui-text text="已绑定：" :size="28"></tui-text>
						<tui-text :text="page.result.isBindCount" type="danger" :size="28"></tui-text>
					</view>
				</view>
				<view>
					<tui-text text="全部解绑" :size="28" type="primary" @click="unbindSFCAsync"></tui-text>
				</view>
			</view>
			<view class="mt-4">
				<pda-list :items="page.result.items" :data="page.result.data">
					<template #right="{row}">
						<view v-if="row.status === 1">
							<tui-text text="解绑" :size="28" type="primary" @click="switchBindModalOpen(row)"></tui-text>
						</view>
					</template>
				</pda-list>
			</view>
		</uni-card>

		<tui-modal padding="20rpx" radius="0" :show="page.modal.switchBind.show" @cancel="switchBindModalClose" custom>
			<uni-forms ref="switchBindFormRef" class="p-2 bg-white border-bottom" errShowType="toast"
				:rules="page.formRules.switchBindRules" :modelValue="page.input">
				<uni-forms-item label="条码" name="code" required>
					<tui-text :text="page.input.code" :size="28" type="gray"></tui-text>
				</uni-forms-item>
				<uni-forms-item label="旧设备" name="bindSFC" required>
					<tui-text :text="page.chose.detail.bindSFC" :size="28" type="gray"></tui-text>
				</uni-forms-item>
				<uni-forms-item label="新设备" name="newBindCode" required>
					<uni-easyinput ref="newBindCodeInputRef" v-model="page.input.newBindCode" trim
						placeholder="扫描或输入"></uni-easyinput>
				</uni-forms-item>
			</uni-forms>

			<view class="mt-1">
				<tui-button type="black" :loading="page.modal.switchBind.isTasking" @click="switchBindModalConfirm">确认换绑</tui-button>
			</view>
		</tui-modal>
	</view>
</template>

<script lang="ts" name="sfcbox" setup>
	import { ref, computed, unref } from 'vue'

	import { onLoad, onReady } from '@dcloudio/uni-app'

	import { init } from './core'

	const formRef = ref()
	const switchBindFormRef = ref()
	const codeInputRef = ref()
	const newBindCodeInputRef = ref()

	/**
	 * 表单验证
	 */
	async function formVaild() {
		const _form = unref(formRef)
		if (_form) {
			try {
				await _form.validate()
				return true
			} catch (err) {
				return false
			}
		}
	}

	/**
	 * 表单验证
	 */
	async function switchBindFormVaild() {
		const _form = unref(switchBindFormRef)
		if (_form) {
			try {
				await _form.validate()
				return true
			} catch (err) {
				return false
			}
		}
	}

	/**
	 * 定位到boxCode
	 */
	function codeInputFocus() {
		const _codeInputRef = unref(codeInputRef)
		if (_codeInputRef) {
			_codeInputRef.toFocus()
		}
	}

	/**
	 * 定位到boxCode
	 */
	function newBindCodeInputFocus() {
		const _newBindCodeInputRef = unref(newBindCodeInputRef)
		if (_newBindCodeInputRef) {
			_newBindCodeInputRef.toFocus()
		}
	}

	/**
	 * 初始化
	 */
	const { page, codeConfirmAsync, switchBindModalOpen, switchBindModalConfirm, switchBindModalClose, unbindSFCAsync } = init({
		formVaild,
		switchBindFormVaild,
		codeInputFocus,
		newBindCodeInputFocus
	})

	/**
	 * 动态计算页面高度
	 */
	const pageHeight = computed(() => {
		let height = 0

		//#ifdef APP
		height = page.windowInfo.windowHeight
		// #endif

		// #ifndef APP
		height = page.windowInfo.windowHeight - 44
		// #endif

		return height + 'px'
	})

	/**
	 * 初次加载执行
	 */
	onLoad(() => {
		page.windowInfo = uni.getWindowInfo()
	})

	/**
	 * 首次渲染完毕后执行
	 */
	onReady(() => {
		codeInputFocus()
	})
</script>

<style lang="scss" scoped>
	.sfcbox {
		display: flex;
	}
</style>