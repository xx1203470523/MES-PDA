<template>
	<view class="stockbin" :style="{height: pageHeight}">

		<!-- <uni-section title="条码" type="line"> -->
		<uni-search-bar ref="materialCodeSearchref" :focus="true" placeholder="条码输入或者扫描" v-model="page.search.materialCode"
			@confirm="materialSearch" cancel-text="重置" @cancel="materialResetSearch"></uni-search-bar>
		<!-- </uni-section> -->
		<view class="flex-row flex-align-center flex-justify-start p-2">
			<text class="text-sub">单据编号：</text>
			<text class="text-sub">{{page.fromDetail.shiftCode}}</text>
		</view>
		<uni-card class="received-main-statistics" background-color="#5C8DFC" margin="10rpx 20rpx">
			<view class="flex-row flex-align-center flex-justify-between">
				<view class="flex-1 flex flex-align-center p-1">
					<view>
						<text class="text-obvious text-white">{{page.info.stockBinMaterialQuantity}}</text>
					</view>
					<view class="mt-1">
						<text class="text-sub text-white">物料库存总数</text>
					</view>
				</view>
				<view class="flex-1 flex flex-align-center p-1">
					<view>
						<text class="text-obvious text-white">{{page.info.stockShiftMaterialQuantity}}</text>
					</view>
					<view class="mt-1">
						<text class="text-sub text-white">物料移动总数</text>
					</view>
				</view>
			</view>
		</uni-card>
		<z-tabs ref="tabs" bgColor="transparent" :list="page.tab.items" :current="page.tab.current"
			@change="tabsChange"></z-tabs>

		<uni-card class="flex-1">
			<view class="flex-row flex-justify-between pb-2">
				<view class="flex-1 flex-row flex-align-center">
					<uni-icons type="calendar"></uni-icons>
					<text class="ml-1">物料编码</text>
				</view>
				<view class="flex-1 flex-row flex-justify-end">
					<text>移动数/库存数</text>
				</view>
			</view>
			<!-- <view class="stockbin-body__content">
				<z-paging ref="paging" :fixed="false" use-inner-list v-model="page.list.data" @query="queryList">
					<template #cell="{item, index}">
						<pda-item :key="index" :items="page.list.items" :data="item" 
							:arrowRight="false">
							<template #header="{ row }">
								<view class="flex-row flex-justify-between flex-1">
									<view class="flex-1">
										<text>{{ row.material.materialCode }}</text>
									</view>
									<view class="flex-1 flex-row flex-justify-end">
										<text>{{ row.shiftQuantity }}/{{ row.stockBinMaterialQuanltity }}</text>
									</view>
								</view>
							</template>
						</pda-item>
					</template>
				</z-paging>
			</view> -->
			<swiper class="flex-1" :current="page.tab.current" @change="swiperChange" @transition="swiperTransition"
				@animationfinish="swiperAnimationfinish">
				<swiper-item class="swiper-item" v-for="(item, index) in page.tab.items" :key="index">
					<stockShiftDetailsList :shiftId="page.fromDetail.id"
						:materialCode="page.search.componentMaterialCode" :searchTypeEnum="index"
						:currentSearchTypeEnum="page.tab.current" @setTotalCount="setTotalCount">
					</stockShiftDetailsList>
				</swiper-item>
			</swiper>
		</uni-card>
	</view>
</template>
<!-- 移位明细 -->
<script lang="ts" name="stockshift_details" setup>
	import { ref, unref,computed } from 'vue'

	import { init } from './stockshift-details-core';

	import { onLoad, onHide,onShow } from '@dcloudio/uni-app'

	import stockShiftDetailsList from './components/stockshift-details-list.nvue'
	
	import {  getTotalCountApiAsync } from '@/api/modules/wms/stockshift/stockshift-detail'

	const {
		page,
		swiperChange,
		tabsChange
	} = init();

	//const paging = ref(null)

	//const stockShiftDetailsList = ref(null)

	const tabs = ref(null)
	
	const materialCodeSearchref=ref(null)
	
	const pageHeight = computed(() => {
		let height = 0
	
		//#ifdef APP
		height = page.windowInfo.windowHeight
		// #endif
	
		// #ifndef APP
		height = page.windowInfo.windowHeight - 44
		// #endif
	
		return height + 'px'
	})

	onLoad(({
		id,
		shiftCode
	}) => {
		page.fromDetail.id = id

		page.fromDetail.shiftCode = shiftCode

		page.windowInfo = uni.getWindowInfo()
		
		materialCodeFocus()
		
		const param_total = {
			id: page.fromDetail.id,
			materialCode: page.search.componentMaterialCode,
		}
		
		getTotalCountApiAsync(param_total).then(({ stockBinMaterialQuanltity, stockShiftMaterialQuanltity }) => {
			page.info.stockBinMaterialQuantity = stockBinMaterialQuanltity
		
			page.info.stockShiftMaterialQuantity = stockShiftMaterialQuanltity
		
			//emits('setTotalCount', page.info)
		})

	})
	
	onShow(()=>{
		materialCodeFocus()
	})

	onHide(() => {
		// #ifndef APP-PLUS
		uni.hideKeyboard()
		// #endif
		// #ifdef APP-PLUS
		plus.key.hideSoftKeybord()
		// #endif
	})

	function swiperAnimationfinish(e : any) {

		page.tab.current = e.detail.current

		const _tabs = unref(tabs)

		_tabs.unlockDx()
	}

	function swiperTransition(e : any) {

		const _tabs = unref(tabs)

		_tabs.setDx(e.detail.dx)
	}

	function setTotalCount(data : any) {

		page.info.stockBinMaterialQuantity = data.stockBinMaterialQuantity??0

		page.info.stockShiftMaterialQuantity = data.stockShiftMaterialQuantity??0
	}

	function materialSearch() {
		
		materialCodeFocus()
		
		page.search.componentMaterialCode = page.search.materialCode
		//console.log(page.search.materialCode)
	}

	function materialResetSearch() {
		page.search.componentMaterialCode = ''
		//console.log(page.search.materialCode)
	}
	
	function materialCodeFocus(){
		const _materialCodeSearchref = unref(materialCodeSearchref)
		
		if (_materialCodeSearchref) {
			_materialCodeSearchref.toFocus()
		}
	}
</script>

<style lang="scss" scoped>
	.stockbin {
		display: flex;
		background-color: #fff;

		.stockbin-body__content {
			border-radius: 24rpx;
			flex: 1;
		}

		.h-button {
			width: 700rpx;
			// align-self:center;
			margin-bottom: 20rpx;

			.sub-button {
				border-radius: 24rpx;
			}
		}

		.select-mode {
			/* #ifndef APP-NVUE */
			display: flex;
			/* #endif */
			flex-direction: row;
			padding: 15rpx;

			.select-mode-item {

				flex-direction: row;
				justify-content: center;
				align-items: center;
				margin: 0 5rpx;
				padding: 5rpx 5rpx;
				height: 60rpx;
				/* #ifndef APP-NVUE */
				display: flex;
				/* #endif */
				flex: 1;
				border-color: #e5e5e5;
				border-style: solid;
				border-width: 1px;
				border-radius: 5px;
			}
		}
	}
</style>