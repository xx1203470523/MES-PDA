<template>
	<view class="content">
		<z-paging ref="paging" class="paging" :fixed="false" use-inner-list v-model="page.list.data" @query="queryList"
			:default-page-size="5">
			<template #cell="{item, index}">
				<pda-item class="mb-4 p-2" :key="index" :items="page.list.items" :data="item">
					<template #header="{ row }">
						<view class="flex-1">
							<text>{{ row?.material?.materialCode || '' }}</text>
						</view>
						<view class="flex-1 flex-row flex-justify-end">
							<text>{{ row.shiftQuantity }}/{{ row.stockBinMaterialQuanltity }}</text>
						</view>
					</template>
				</pda-item>
			</template>
		</z-paging>
	</view>
</template>

<script lang="ts" name="stockshift-details-list" setup>
	import { ref, nextTick, watch, withDefaults, unref } from 'vue'
	//getTotalCountApiAsync
	import { getDetailListApiAsync } from '@/api/modules/wms/stockshift/stockshift-detail'

	import { init } from './stockshift-details-list-core';

	import { onLoad } from '@dcloudio/uni-app'

	const {
		page
	} = init();

	const emits = defineEmits(['setTotalCount'])

	// defineExpose({
	// 	materialSearch
	// })

	const props = withDefaults(defineProps<{
		shiftId : string,
		materialCode : string,
		searchTypeEnum : number,
		currentSearchTypeEnum : number
	}>(), {
		shiftId: '',
		materialCode: '',
		searchTypeEnum: 0,
		currentSearchTypeEnum: 0
	})

	const paging = ref(null)

	onLoad(() => {
		const param_total = {
			id: props.shiftId,
			materialCode: props.materialCode,
		}

		// getTotalCountApiAsync(param_total).then(({ stockBinMaterialQuanltity, stockShiftMaterialQuanltity }) => {
		// 	page.info.stockBinMaterialQuantity = stockBinMaterialQuanltity

		// 	page.info.stockShiftMaterialQuantity = stockShiftMaterialQuanltity

		// 	emits('setTotalCount', page.info)
		// })
	})


	async function queryList(pageIndex : number, pageSize : number) {

		const _paging = unref(paging)

		try {
			const param = {
				id: props.shiftId,
				materialCode: props.materialCode,
				pageIndex,
				pageSize,
				searchTypeEnum: props.searchTypeEnum
			}

			const { data } = await getDetailListApiAsync(param)

			//console.log(data)

			page.firstLoaded = true

			_paging.complete(data)
		}
		catch (error) {

			_paging.complete(false)

		}

	}

	watch(() => props.currentSearchTypeEnum, function (n) {

		const _paging = unref(paging)

		if (n === props.searchTypeEnum) {
			if (!page.firstLoaded) {
				nextTick().then(() => {
					_paging.reload()
				}
				)
			}
		}
	})

	watch(() => props.materialCode, function (n) {

		const _paging = unref(paging)

		const param = {
			id: props.shiftId,
			materialCode: n,
			pageIndex: 1,
			pageSize: 5
		}

		getDetailListApiAsync(param).then((res) => {

			//console.log(res.data)

			page.firstLoaded = true

			_paging.complete(res.data)

			const param_total = {
				id: props.shiftId,
				materialCode: props.materialCode,
			}

			// getTotalCountApiAsync(param_total).then(({ stockBinMaterialQuanltity, stockShiftMaterialQuanltity }) => {
			// 	page.info.stockBinMaterialQuantity = stockBinMaterialQuanltity

			// 	page.info.stockShiftMaterialQuantity = stockShiftMaterialQuanltity

			// 	emits('setTotalCount', page.info)
			// })

		}).catch((error) => {

			_paging.complete(false)

		})


	})
</script>

<style scoped>
	.content {
		flex: 1;
		/* #ifndef APP-NVUE */
		height: 100%;
		/* #endif */
	}

	.paging {
		/* #ifndef APP-NVUE */
		height: 100%;
		/* #endif */
	}
</style>