<template>
	<view class="example">
		<uni-forms ref="baseForm" :modelValue="baseFormData.formData" label-position="left" :rules="baseFormData.rules"
			labelWidth="160rpx">
			<uni-forms-item label="仓库" required name="wareHouseId">
				<uni-data-picker v-model="baseFormData.formData.wareHouseId"
					:localdata="baseFormData.selectData_wareHouses" popup-title="选择仓库">
				</uni-data-picker>
			</uni-forms-item>
			<uni-forms-item label="移位类型" required name="shiftType">
				<uni-data-picker v-model="baseFormData.formData.shiftType"
					:localdata="baseFormData.selectData_shiftType" popup-title="选择移位类型">
				</uni-data-picker>
			</uni-forms-item>
			<uni-forms-item label="备注" name="remark">
				<uni-easyinput v-model="baseFormData.formData.remark" placeholder="请输入备注" class="sub-input" />
			</uni-forms-item>
		</uni-forms>
		<button type="primary" @click="addHandle">生成单据</button>

	</view>
</template>
<!-- 新增移位 -->
<script lang="ts" setup name="stockshift_add">
	import { ref } from "vue";
	import { onLoad } from '@dcloudio/uni-app'
	import { init } from './stockshift-add-core';
	import { addAsync,getOne } from '@/api/modules/wms/stockshift/stockshift-operate'
	import { getWarehouseListApiAsync, getDefaultWarehouseAsync } from '@/api/modules/wms/common/common-selector'

	const baseForm = ref(null)

	const {
		baseFormData
	} = init();

	onLoad(async function () {
		baseFormData.selectData_wareHouses = await getWarehouseListApiAsync()
		baseFormData.formData.shiftType='1'
		var warehouseId = await getDefaultWarehouseAsync()
		baseFormData.formData.wareHouseId= warehouseId.defaultWarehouseId
	})

	async function addHandle() {
		baseForm.value.validate().then(async (res : any) => {

			if (res) {
				try {
					uni.showLoading({
						title: '保存中...',
						mask: true
					})

					const param = {
						warehouseId: baseFormData.formData.wareHouseId,
						shiftType:Number.parseInt(baseFormData.formData.shiftType),
						remark: baseFormData.formData.remark
					}

					const responseData =await addAsync(param);
					
					if(!responseData){
						uni.showToast({
							icon: "error",
							title: '保存失败!'
						})
						uni.hideLoading()
						return
					}
					
					const data=await getOne(responseData)
					
					// if(!data){
					// 	uni.showToast({
					// 		icon: "error",
					// 		title: '保存失败!'
					// 	})
					// 	uni.hideLoading()
					// 	return
					// }
					
					console.log(responseData)

					uni.showToast({
						icon: "success",
						title: '保存成功!'
					})
					
					const url = '/pages/stock/shift/detail/stockshift-detail-add?id=' +
						data.id + '&shiftCode=' + data.shiftCode +
						'&wareHouseId=' + data.warehouseId + '&shiftType=' + data.shiftType+'&shiftTotal='+data.shiftTotal

					uni.redirectTo({
						url,
						success: () => {
							//console.log(res);
						}
					});
				}
				catch {
					uni.showToast({
						icon: "error",
						title: '保存失败!'
					})
				}

				uni.hideLoading()
			}
		}).catch((err : any) => {
			console.log(err)
		})
	}
</script>

<style lang="scss">
	.example {
		padding: 15px;
		background-color: #fff;

		.sub-input {
			background-color: #fff;
		}
	}

	.segmented-control {
		margin-bottom: 15px;
	}

	.button-group {
		margin-top: 15px;
		display: flex;
		justify-content: space-around;
	}

	.form-item {
		display: flex;
		align-items: center;
	}

	.button {
		display: flex;
		align-items: center;
		height: 35px;
		margin-left: 10px;
	}
</style>