<template>
	<view class="received-operate" :style="{height: pageHeight}">
		<uni-forms ref="form" class="p-4 bg-white border-bottom" :rules="rules" :modelValue="page.input">
			<uni-forms-item label="库位" name="warehouseBinCode" required>
				<uni-easyinput ref="warehouseBinCodeInput" v-model="page.input.warehouseBinCode" trim
					placeholder="扫描或输入" @confirm="warehouseBinConfirm"></uni-easyinput>
			</uni-forms-item>
			<uni-forms-item label="条码" name="materialCode" required>
				<view class="flex-1">
					<uni-easyinput ref="materialCodeInput" v-model="page.input.materialCode" trim placeholder="扫描或输入"
						@confirm="materialConfirm"></uni-easyinput>
				</view>
				<view class="ml-4 unit-item">
					<uni-easyinput :value="page.scan.unit" disabled></uni-easyinput>
				</view>
			</uni-forms-item>
			<uni-forms-item label="数量" name="quantity" required>
				<view class="flex-1 flex-row flex-align-center flex-justify-between">
					<view class="flex-1">
						<uni-number-box ref="quantityInput" v-model="page.input.quantity" @confirm="quantityConfirm"
							@calc="calcFocus"></uni-number-box>
					</view>
					<view class="ml-3">
						<basic-checkbox v-model="page.handle.needConfirmQuantity" label="确认数量"></basic-checkbox>
					</view>
				</view>
			</uni-forms-item>
		</uni-forms>

		<uni-card>
			<view class="flex flex-row flex-align-center flex-justify-between">
				<view class="flex flex-1 flex-align-center">
					<text class="flex-1 text-center text-sub">通知数/扫描数</text>
					<text
						class="flex-1 text-center text-obvious mt-1">{{ page.scan.assignedTotal }}/{{ page.scan.receiptTotal }}</text>
				</view>
				<view class="flex flex-1 flex-align-center">
					<text class="flex-1 text-center text-sub">总通知数/总扫描数</text>
					<text
						class="flex-1 text-center text-obvious mt-1">{{ page.info.assignedTotal }}/{{ page.info.receiptTotal }}</text>
				</view>
			</view>
		</uni-card>

		<uni-card class="flex-1">
			<pda-item v-if="page.result.data" :items="page.result.items" :data="page.result.data"
				:no-border="true"></pda-item>
		</uni-card>
	</view>
</template>

<script lang="ts" name="received" setup>
	import { ref, unref, computed } from 'vue'

	import { onLoad, onShow, onNavigationBarButtonTap } from '@dcloudio/uni-app'

	import { confirmAsync } from '@/api/modules/wms/receive/receive-order'

	import { to, back } from '@/utils/route-utils'

	import { init } from './received-operate-core';

	const form = ref()

	const quantityInput = ref()

	const warehouseBinCodeInput = ref()

	const materialCodeInput = ref()

	function warehouseBinCodeInputFocus() {
		const _warehouseBinCodeInput = unref(warehouseBinCodeInput)

		if (_warehouseBinCodeInput) {
			_warehouseBinCodeInput.toFocus()
		}
	}

	function materialCodeInputFocus() {
		const _materialCodeInput = unref(materialCodeInput)

		if (_materialCodeInput) {
			_materialCodeInput.toFocus()
		}
	}

	/**
	 * 获取数量输入框焦点
	 */
	function quantityInputFocus() {
		const _quantityInput = unref(quantityInput)

		if (_quantityInput) {
			_quantityInput.toFocus({
				openKeyboard: true
			})
		}
	}

	/**
	 * 点击加减按钮后的焦点
	 */
	function calcFocus() {
		if (page.handle.needConfirmQuantity) {
			quantityInputFocus()
		} else {
			materialCodeInputFocus()
		}
	}

	/**
	 * 验证表单
	 */
	async function vaild() {
		const _form = unref(form)
		const _materialCodeInput = unref(materialCodeInput)
		const _warehouseBinCodeInput = unref(warehouseBinCodeInput)

		if (_form) {
			try {
				await _form.validate()
				return true
			} catch (err) {
				switch (err[0].key) {
					case 'warehouseBinCode':
						_warehouseBinCodeInput.toFocus()
						break

					case 'materialCode':
						_materialCodeInput.toFocus()
						break

					default:
						break
				}

				return false
			}
		}
	}

	const { page, rules, reloadDetailInfo, reloadDetailQuantitySum, warehouseBinConfirm, materialConfirm, quantityConfirm } = init({ vaild, quantityInputFocus, materialCodeInputFocus, warehouseBinCodeInputFocus });

	const pageHeight = computed(() => {
		let height = 0

		//#ifdef APP
		height = page.windowInfo.windowHeight
		// #endif

		// #ifndef APP
		height = page.windowInfo.windowHeight - 44
		// #endif

		return height + 'px'
	})

	onLoad(({ id }) => {
		page.input.receiptOrderId = id
		page.windowInfo = uni.getWindowInfo()
	})

	onShow(() => {
		reloadDetailInfo()
		reloadDetailQuantitySum()
	})

	onNavigationBarButtonTap((opt : any) => {
		if (opt.type == 'menu') {
			uni.showActionSheet({
				itemList: ['查看', '完成'],
				success: (res) => {
					switch (res.tapIndex) {
						case 0:
							to('/pages/received/order/detail/received-detail?id=' + page.input.receiptOrderId)
							break

						case 1:
							confirmAsync([
								{
									id: page.input.receiptOrderId
								}
							]).then(_ => {
								uni.showToast({
									icon: 'success',
									title: '收货完成',
									success: function () {
										back({
											redirectUrl: '/pages/received/order/main/received-main'
										})
									}
								})

							}).catch(() => {
								materialCodeInputFocus()
							})
							break
					}
				},
				fail: () => {
					materialCodeInputFocus()
				}
			})
		}
	})
</script>

<style lang="scss" scoped>
	.received-operate {
		display: flex;

		.unit-item {
			width: 150rpx;
		}
	}
</style>